# This workflow will build a Java project with Ant
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-ant

name: ActionScript 3 CI

# Github workflows do not support actionscript directly.
# However the build uses ant, which is usually used to build java projects.
# The ant task (mxmlc) provided by the flex SDK (ant/lib/flexTasks.jar) is used to build the project.

on:
  #Pushes/changes to CoC.as should trigger this. Which should basically only consist of version updates, and maybe the rare settings change.
  push:
    paths:
      - 'classes/classes/CoC.as'
  #Manual trigger run. Only works once this is in the main branch.
  workflow_dispatch:
  #Scheduled run. Only works once this is in the main branch.
  schedule:
    - cron: "0 22 * * *"

env:
  # tell the build file where to find the flex SDK
  FLEX_HOME: "/usr/local/bin/ApacheFlexSDK"
  # this is to trick the flash player into thinking it is running on a desktop
  DISPLAY: ":1"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache FlexSDK Install
        uses: actions/cache@v3
        with:
          key: apache-stuff
          path: |
            /usr/local/bin/ApacheFlexSDK
        id: "cacheme"

      #handle cache failed
      - if: ${{ steps.cacheme.outputs.cache-hit != 'true' }}
        name: Install Flex SDK
        uses: joshtynjala/setup-apache-flex-action@v2
        with:
          flex-version: "4.16.1"
          air-version: "33.1.1.575"
          accept-air-license: true

#      # install VNC and xfce4, so we have a desktop, as the flash player requires one:
#      - name: Install desktop, ant and aapt.
##        run: sudo apt update && sudo apt install tightvncserver xfce4 ant ant-optional -y
#        run: sudo apt update && sudo apt install tightvncserver xfce4 -y


      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

#      # start a VNC session, this will be the desktop for tests
#      - name: Start VNC
#        run: Xvnc :1 &

      # this is where the build happens. A separate build is started for every entry in the matrix element
      - name: Check what is going on in target
        #        run: ant -v allCI
        run: ls -lahr /home/runner/work/CoCX/CoCX/

      - name: Make ADT executable, where's aapt?
        run: chmod +x /usr/local/bin/ApacheFlexSDK/apache-flex-sdk-4.16.1-bin/bin/adt && gradle wrapper --stacktrace

      # this is where the build happens. A separate build is started for every entry in the matrix element
      - name: Check what is going on in target
#        run: ant -v allCI
        if: always()
        run: ls -lahr /home/runner/work/CoCX/CoCX/
        continue-on-error: true

      - name: Build
        run: ./gradlew allCI


#      - name: Build-armv7
#        run: cd /usr/local/bin/ApacheFlexSDK/apache-flex-sdk-4.16.1-bin/bin/ && ./adt -package -target apk-captive-runtime -arch armv7 -storetype pkcs12 -keystore /home/runner/work/CoCX/CoCX/coc.keystore -storepass 123456 /home/runner/work/CoCX/CoCX/target/CoC-Mobile-armv7.apk /home/runner/work/CoCX/CoCX/CoC-Android.xml -C  /home/runner/work/CoCX/CoCX/target CoC-Mobile.swf -C /home/runner/work/CoCX/CoCX devTools/icons
#
#      - name: Build-armv8
#        run: cd /usr/local/bin/ApacheFlexSDK/apache-flex-sdk-4.16.1-bin/bin/ && ./adt -package -target apk-captive-runtime -arch armv8 -storetype pkcs12 -keystore /home/runner/work/CoCX/CoCX/coc.keystore -storepass 123456 /home/runner/work/CoCX/CoCX/target/CoC-Mobile-armv8.apk /home/runner/work/CoCX/CoCX/CoC-Android.xml -C  /home/runner/work/CoCX/CoCX/target CoC-Mobile.swf -C /home/runner/work/CoCX/CoCX devTools/icons

      - name: Save Debug SWF
        uses: actions/upload-artifact@v3
        with:
          name: debug-swf
          path: target/CoC-debug.swf

      - name: Save Release SWF
        uses: actions/upload-artifact@v3
        with:
          name: release-swf
          path: target/CoC-release.swf

      - name: Save Android armv7 APK
        uses: actions/upload-artifact@v3
        with:
          name: mobile-arm7-32bit-apk
          path: target/CoC-Mobile-armv7.apk

      - name: Save Android armv8 APK
        uses: actions/upload-artifact@v3
        with:
          name: mobile-arm8-64bit-apk
          path: target/CoC-Mobile-armv8.apk

      # discord notifier to tell us if build succeeded or failed, and the link to download the artifacts.
      - name: Discord notification to channel
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
        continue-on-error: true

#      - name: Running dirchecks for flex stuff
#        if: always()
#        run: ls -R /usr/local/bin/ApacheFlexSDK > /home/runner/work/CoCX/CoCX/infodump-fulldir.txt && ls -R /usr/local/bin/ApacheFlexSDK | grep apt > /home/runner/work/CoCX/CoCX/infodump-grepdir.txt
#        continue-on-error: true
#
#      - name: Checking directory
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: infodump-fulldir.txt
#          path: infodump-fulldir.txt
#        continue-on-error: true
#
#      - name: Checking directory 2
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: infodump-grepdir.txt
#          path: infodump-grepdir.txt
#        continue-on-error: true